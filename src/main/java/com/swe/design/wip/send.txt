
package com.swe.design.wip;

public class Leaf implements Node {
  private String name;

  public Leaf(String name) {
    this.name = name;
  }

  @Override
  public void print() {
    System.out.println("Leaf: " + name);
  }
}

package com.swe.design.wip;

interface Node {
  public void print();
}

package com.swe.design.wip;

public class StudentArchive {
  public String[] students = { "A", "B", "C", "D" };

  public void printLeftToRight() {
    for (int i = 0; i < students.length; i++) {
      System.out.print(students[i]);
    }
    System.out.println('\n');
  }

  public void printRightToLeft() {
    for (int i = students.length - 1; i >= 0; i--) {
      System.out.print(students[i]);
    }
    System.out.println('\n');
  }

  public int size() {
    return students.length;
  }

  public void printPosition(int position) {
    System.out.println(students[position]);
  }

}

package com.swe.design.wip;

public class ClientWip {
  public static void execute() {

    StudentArchive archive = new StudentArchive();
    archive.printLeftToRight();
    archive.printRightToLeft();

    System.out.println("--------------------------------------------------------------------------------");

    Branch branch = new Branch("A");
    Branch branch2 = new Branch("B");
    Branch branch3 = new Branch("C");

    Leaf leaf = new Leaf("D");

    branch.addLeft(branch2);
    branch.addRight(branch3);

    branch2.addLeft(leaf);

    branch.print();

    System.out.println("--------------------------------------------------------------------------------");

    // Printing first and last element on the list
    archive.printPosition(0);
    archive.printPosition(archive.size() - 1);

  }
}
